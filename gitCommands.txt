git help - команда выводящая подсказки

git help имя команды - инфо по конкретной команде

git config --global user.name 'Yuriy Yarvinen' - задаем имя
git config --global user.email 'yuriy.yarvi@gmail.com' - задаем емайл
git config --global color.ui true - цветовая схема

git init - инициализация гита

git add - добавление файлов
git add <список файлов>- добавление файлов из списка
git add . - добавление всех файлов
git add *.txt - добавление всех файлов в текущей папке с расширением
git add "*.txt" - добавление всех файлов в проекте с расширением
git add someDir/ - добавление всех файлов в папке someDir
git add someDir/*.txt - добавление всех файлов в папке someDir с расширением

git commit - сделать комит, снимок системы
git status - выводить информацию о изменненых, добавленых, и не добавленых файлах, текущий статус репозитория

git log - просмотреть историю коммитов

git diff - показывает разницу между текущим неотслеживаемым состоянием репозитория и последним снимком
git diff --staged - показывает разницу между текущим отслеживаемым состоянием репозитория и последним снимком репозитория
git diff COMMIT_ID - показывает разницу между текущим состоянием репозитория и указанным снимком репозитория

git reset - откатыввает проект к какому-то снимку !!! ВАЖНО аккуратнее с --hard
git reset --soft COMMIT_ID or HEAD^^ or HEAD ~№ - откатывает верисю к указаному коммиту и переводит все коммиты после указанного в отслеживаемую зону 
git reset --mixed COMMIT_ID or HEAD^^ or HEAD ~№ - откатывает верисю к указаному коммиту и переводит все коммиты после указанного в неотслеживаемую зону 
git reset --hard COMMIT_ID or HEAD^^ or HEAD ~№ - откатывает верисю к указаному коммиту и удаляет коммиты безвозвратно 

git checkout COMMIT_ID or HEAD^^ or HEAD ~№ - перводит состояние проекта в указанный коммит
git checkout branch name - переводит состояние проекта к последнему коммиту в указанной ветке
git checkout -- . - удаляет все не закоммиченные и не отслеживаемые измененния в файлах
git checkout -- filename - удаляет все не закоммиченные и не отслеживаемые изменения в определенном файле
чтобы удалить отслеживаемые изменения сначало git reset потом git checkout -- . 

Пример
git checkout 357df2527ed5bf98a3ca6014b777a852b60d9eb5 -- file2.txt - возвращает состояние file2.txt в состояние из коммита 357df2527ed5bf98a3ca6014b777a852b60d9eb5

git commit -a -m 'message' - практически тоже самое что и git add . git commit -m 'mes', но данная команда не добавляет в коммит новые неотслеживаемые файлы, а только изменения

git commit --amned -m 'message' - дополняет последний коммит и переименовыевает его, новый коммит не создается

